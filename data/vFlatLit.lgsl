#version 410 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec3 aCol;

uniform mat4 m; // model
uniform mat4 v; // view
uniform mat4 p; // perspective
uniform vec4 ourColor;

out vec3 FragPos;
out vec3 Normal;
out vec4 varyingColor;

void main()
{
	varyingColor = vec4(aCol,1.0);
    FragPos = vec3(m * vec4(aPos, 1.0));
    Normal = mat3(transpose(inverse(m))) * aNormal;  
    
    gl_Position = p * v * vec4(FragPos, 1.0);
}